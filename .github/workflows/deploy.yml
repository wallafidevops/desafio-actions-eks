name: Deploy no kubernetes 
on: 
  workflow_call:
    inputs:
        environment:
            type: string
            required: true
            description: 'Nome ambiente'

            
jobs:
  deploy:
    name: Deploy no kubernetes
    environment: ${{ inputs.environment }}
    runs-on: ubuntu-latest
    env:
      AWS_ECR_URI: 216989136189.dkr.ecr.us-east-1.amazonaws.com
      IMAGE_NAME: review-filmes
      BUILD_ID: ${{ github.run_number }}
      GIT_USER_NAME: wallafidevops
      GIT_USER_EMAIL: wallafisantos55@gmail.com
      ARGOCD_SERVER: argocd.app.wsnobrega.life
      ARGOCD_APP_NAME: review-filmes
      BRANCH_NAME: ${{ github.ref_name }}
    steps:
      - name: Checkout repositório atual
        uses: actions/checkout@v4

      - name: Instalar dependências (yq, argocd, ssh)
        run: |
          sudo apt-get update
          sudo apt-get install -y openssh-client curl git yq
          curl -sSL -o /usr/local/bin/argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x /usr/local/bin/argocd

      - name: Configurar Git
        run: |
          git config --global user.name "$GIT_USER_NAME"
          git config --global user.email "$GIT_USER_EMAIL"

      - name: Clonar repositório GitOps
        run: |
          rm -rf desafio-actions-eks
          git clone https://${{ secrets.GIT_USERNAME }}:${{ secrets.GIT_PASSWORD }}@github.com/wallafidevops/desafio-actions-eks.git
          cd desafio-actions-eks

          git checkout $BRANCH_NAME
          git pull origin $BRANCH_NAME

    
          sed -i 's|image: .*review-filmes:.*|image: '"$AWS_ECR_URI/${{ vars.STAGE }}-$IMAGE_NAME:${{ github.run_number }}"'|' ./k8s/deploy/${{ vars.STAGE }}/deployment.yaml

          echo "YAML final:"
          cat ./k8s/deploy/${{ vars.STAGE }}/deployment.yaml

          git add ./k8s/deploy/${{ vars.STAGE }}
          git commit -m "Alteração para a imagem 216989136189.dkr.ecr.us-east-1.amazonaws.com/${{ vars.STAGE }}-review-filmes:v${{ github.run_number }}"
          git push origin HEAD:$BRANCH_NAME

      - name: Fazer login e sincronizar com ArgoCD
        run: |
          argocd login $ARGOCD_SERVER --insecure --username admin --password ${{ secrets.ARGOCD_TOKEN }} --grpc-web
          argocd app sync ${{ vars.STAGE }}-$ARGOCD_APP_NAME --force --prune --grpc-web      